(declare-datatypes (T) ((Lst nil (cons (hd T) (tl Lst)))))
(declare-const ls (Lst Int))
(declare-const el Int)
(declare-fun Mul ((Lst Int) Int) Int)
(assert (forall ((ls (Lst Int)) (el Int)) (=> (= ls nil) (= (Mul ls el) 0))))
(assert (forall ((ls (Lst Int)) (el Int) (h Int) (t (Lst Int)))
  (=> (and (= ls (cons h t)) (= h el)) (= (Mul ls el) (+ 1 (Mul t el))))))
(assert (forall ((ls (Lst Int)) (el Int) (h Int) (t (Lst Int)))
  (=> (and (= ls (cons h t)) (not(= h el))) (= (Mul ls el) (Mul t el)))))
(check-sat)
